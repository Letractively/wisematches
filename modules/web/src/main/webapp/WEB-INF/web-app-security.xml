<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd"
             default-destroy-method="destroy">

    <global-method-security jsr250-annotations="enabled" secured-annotations="enabled"/>

    <beans:bean id="localeResolver" class="wisematches.server.web.i18n.PersonalityLocaleResolver"/>

    <beans:bean id="sessionRegistryFixFilter"
                class="wisematches.server.web.security.web.filter.SessionRegistryFilter">
        <beans:property name="sessionRegistry" ref="playerStateManager"/>
    </beans:bean>

    <beans:bean id="playerDetailsService" class="wisematches.server.web.security.PlayerDetailsService">
        <beans:property name="accountManager" ref="accountManager"/>
        <beans:property name="accountLockManager" ref="accountLockManager"/>
        <beans:property name="accountRecoveryManager" ref="accountRecoveryManager"/>

        <beans:property name="moderators" value="${server.moderators}"/>
        <beans:property name="administrators" value="${server.admins}"/>
        <beans:property name="personalityManager" ref="personalityManager"/>
    </beans:bean>

    <beans:bean id="visitorAuthenticationProvider"
                class="wisematches.server.web.security.authentication.VisitorAuthenticationProvider">
        <beans:property name="visitorKey" value="visitor"/>
        <beans:property name="userDetailsChecker" ref="userDetailsChecker"/>
        <beans:property name="playerDetailsService" ref="playerDetailsService"/>
    </beans:bean>

    <beans:bean id="playerAuthenticationProvider"
                class="wisematches.server.web.security.authentication.MemberAuthenticationProvider">
        <beans:property name="userDetailsChecker" ref="userDetailsChecker"/>
        <beans:property name="playerDetailsService" ref="playerDetailsService"/>
    </beans:bean>

    <beans:bean id="rememberMeServices"
                class="wisematches.server.web.security.web.rememberme.WMRememberMeServices">
        <beans:constructor-arg name="key" value="${security.remember.token}"/>
        <beans:constructor-arg name="userDetailsService" ref="playerDetailsService"/>
        <beans:constructor-arg name="tokenRepository">
            <beans:bean class="wisematches.server.web.security.web.rememberme.WMPersistentTokenRepository">
                <beans:property name="dataSource" ref="dataSource"/>
                <beans:property name="createTableOnStartup" value="false"/>
            </beans:bean>
        </beans:constructor-arg>

        <beans:property name="parameter" value="rememberMe"/>
        <beans:property name="cookieName" value="WM_RM"/>
    </beans:bean>

    <beans:bean id="redirectStrategy" class="wisematches.server.web.security.web.WMRedirectStrategy">
        <beans:property name="redirectParameters">
            <beans:set>
                <beans:value>rememberMe</beans:value>
            </beans:set>
        </beans:property>
    </beans:bean>

    <beans:bean id="authenticationSuccessHandler"
                class="wisematches.server.web.security.web.WMAuthenticationSuccessHandler">
        <beans:property name="defaultTargetUrl" value="/playground/scribble/active"/>
        <beans:property name="targetUrlParameter" value="continue"/>
    </beans:bean>

    <beans:bean id="authenticationFailureHandler"
                class="wisematches.server.web.security.web.WMAuthenticationFailureHandler">
        <beans:property name="redirectStrategy" ref="redirectStrategy"/>
        <beans:property name="failureUrl" value="/account/loginAuth?error="/>
        <beans:property name="defaultCode" value="system"/>
        <beans:property name="allowSessionCreation" value="true"/>
        <beans:property name="exceptionCodes">
            <beans:map>
                <beans:entry
                        key="org.springframework.security.authentication.BadCredentialsException"
                        value="credential"/>
                <beans:entry
                        key="org.springframework.security.core.userdetails.UsernameNotFoundException"
                        value="credential"/>

                <beans:entry
                        key="org.springframework.security.web.authentication.session.SessionAuthenticationException"
                        value="session"/>
                <beans:entry
                        key="org.springframework.security.web.authentication.www.NonceExpiredException"
                        value="session"/>
                <beans:entry
                        key="org.springframework.security.authentication.AuthenticationCredentialsNotFoundException"
                        value="session"/>
                <beans:entry
                        key="org.springframework.security.authentication.InsufficientAuthenticationException"
                        value="session"/>

                <beans:entry
                        key="org.springframework.security.authentication.AccountStatusException"
                        value="status"/>

                <beans:entry
                        key="org.springframework.security.authentication.InsufficientAuthenticationException"
                        value="insufficient"/>
                <beans:entry
                        key="org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationException"
                        value="insufficient"/>
                <beans:entry
                        key="org.springframework.security.web.authentication.rememberme.CookieTheftException"
                        value="insufficient"/>
                <beans:entry
                        key="org.springframework.security.web.authentication.rememberme.InvalidCookieException"
                        value="insufficient"/>
            </beans:map>
        </beans:property>
    </beans:bean>

    <beans:bean id="accessDeniedHandler" class="wisematches.server.web.security.web.access.WMAccessDeniedHandler">
        <beans:property name="insufficientErrorPage" value="/account/loginAuth?error=insufficient"/>
    </beans:bean>

    <beans:bean id="authenticationEntryPoint"
                class="wisematches.server.web.security.web.WMAuthenticationEntryPoint">
        <beans:property name="authenticationFailureHandler" ref="authenticationFailureHandler"/>
    </beans:bean>

    <beans:bean id="socialAuthenticationFilter"
                class="wisematches.server.web.security.social.SocialAuthenticationFilter">
        <beans:property name="filterProcessesUrl" value="/account/social"/>

        <beans:constructor-arg name="authManager" ref="authenticationManager"/>
        <beans:constructor-arg name="userIdSource">
            <beans:bean class="wisematches.server.web.security.social.PersonalityUserIdSource"/>
        </beans:constructor-arg>
        <beans:constructor-arg name="authServiceLocator" ref="connectionFactoryLocator"/>
        <beans:constructor-arg name="usersConnectionRepository" ref="usersConnectionRepository"/>

        <beans:property name="updateConnections" value="true"/>

        <beans:property name="signupUrl" value="/account/social/association"/>
        <beans:property name="defaultFailureUrl" value="/account/social/finish"/>
        <beans:property name="connectionAddedRedirectUrl"
                        value="/account/social/finish?continue=/account/modify#socialTab"/>

        <beans:property name="rememberMeServices" ref="rememberMeServices"/>

        <beans:property name="authenticationSuccessHandler">
            <beans:bean class="org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler">
                <beans:constructor-arg value="/account/social/finish?continue=/playground/scribble/active"/>
            </beans:bean>
        </beans:property>
    </beans:bean>

    <beans:bean id="accountAuthenticationFilter"
                class="wisematches.server.web.security.web.filter.AccountAuthenticationFilter">
        <beans:property name="filterProcessesUrl" value="/account/authorization"/>
        <beans:property name="authenticationManager" ref="authenticationManager"/>

        <beans:property name="authenticationSuccessHandler" ref="authenticationSuccessHandler"/>
        <beans:property name="authenticationFailureHandler" ref="authenticationFailureHandler"/>

        <beans:property name="rememberMeServices" ref="rememberMeServices"/>
    </beans:bean>

    <beans:bean id="visitorAuthenticationFilter"
                class="wisematches.server.web.security.web.filter.VisitorAuthenticationFilter">
        <beans:property name="localeResolver" ref="localeResolver"/>
        <beans:property name="visitorProcessingUrl" value="/account/loginGuest"/>
        <beans:property name="failureHandle" ref="authenticationFailureHandler"/>
        <beans:property name="successHandler" ref="authenticationSuccessHandler"/>
        <beans:property name="authenticationManager" ref="authenticationManager"/>
    </beans:bean>

    <beans:bean id="socialAuthenticationProvider"
                class="org.springframework.social.security.SocialAuthenticationProvider">
        <beans:constructor-arg name="userDetailsService" ref="playerDetailsService"/>
        <beans:constructor-arg name="usersConnectionRepository" ref="usersConnectionRepository"/>
    </beans:bean>

    <beans:bean id="rememberMeAuthenticationProvider"
                class="org.springframework.security.authentication.RememberMeAuthenticationProvider">
        <beans:constructor-arg name="key" value="${security.remember.token}"/>
    </beans:bean>

    <beans:bean id="concurrentSessionFilter"
                class="org.springframework.security.web.session.ConcurrentSessionFilter">
        <beans:property name="sessionRegistry" ref="playerStateManager"/>
        <beans:property name="expiredUrl" value="/account/loginAuth?error=session"/>
    </beans:bean>

    <beans:bean id="sessionControlStrategy"
                class="org.springframework.security.web.authentication.session.ConcurrentSessionControlAuthenticationStrategy">
        <beans:constructor-arg name="sessionRegistry" ref="playerStateManager"/>
        <beans:property name="maximumSessions" value="-1"/>
    </beans:bean>

    <authentication-manager alias="authenticationManager">
        <authentication-provider ref="playerAuthenticationProvider"/>
        <authentication-provider ref="socialAuthenticationProvider"/>
        <authentication-provider ref="visitorAuthenticationProvider"/>
        <authentication-provider ref="rememberMeAuthenticationProvider"/>
    </authentication-manager>

    <http pattern="/static/**" security="none"/>

    <http use-expressions="true">
        <intercept-url pattern="/playground/profile/view" access="permitAll"/>
        <intercept-url pattern="/playground/profile/image/view" access="permitAll"/>
        <intercept-url pattern="/playground/profile/awards/**" access="permitAll"/>
        <intercept-url pattern="/playground/scribble/board" access="permitAll"/>

        <intercept-url pattern="/playground/dictionary/loadWordEntry.ajax" access="permitAll"/>
        <intercept-url pattern="/playground/dictionary/loadWordEntries.ajax" access="permitAll"/>

        <intercept-url pattern="/maintain/**" access="hasRole('admin') and isFullyAuthenticated()"/>
        <intercept-url pattern="/playground/**" access="isAuthenticated()"/>

        <intercept-url pattern="/account/membership" access="permitAll"/>
        <intercept-url pattern="/account/membership/**" access="isAuthenticated()"/>
        <intercept-url pattern="/account/modify" access="isFullyAuthenticated()"/>

        <intercept-url pattern="/**" access="permitAll"/>

        <custom-filter before="PRE_AUTH_FILTER" ref="accountAuthenticationFilter"/>
        <custom-filter position="PRE_AUTH_FILTER" ref="socialAuthenticationFilter"/>

        <!--<custom-filter after="BASIC_AUTH_FILTER" ref="androidAuthenticationFilter"/>-->
        <custom-filter before="ANONYMOUS_FILTER" ref="visitorAuthenticationFilter"/>
        <custom-filter after="SESSION_MANAGEMENT_FILTER" ref="sessionRegistryFixFilter"/>
        <custom-filter position="CONCURRENT_SESSION_FILTER" ref="concurrentSessionFilter"/>

        <session-management session-authentication-strategy-ref="sessionControlStrategy"/>

        <remember-me services-ref="rememberMeServices" key="${security.remember.token}"/>

        <access-denied-handler ref="accessDeniedHandler"/>

        <http-basic entry-point-ref="authenticationEntryPoint"/>

        <form-login login-page="/account/login"
                    login-processing-url="/account/loginProcessing"
                    authentication-success-handler-ref="authenticationSuccessHandler"
                    authentication-failure-handler-ref="authenticationFailureHandler"/>

        <logout logout-url="/account/logout"
                logout-success-url="/account/login"
                invalidate-session="false"/>
    </http>
</beans:beans>