<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2010, WiseMatches (by Sergey Klimenko).
  -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
            http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:property-placeholder properties-ref="applicationProperties"/>

    <context:component-scan base-package="wisematches.server.web.servlet.mvc"/>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <mvc:annotation-driven validator="validator"/>

    <mvc:interceptors>
        <bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
            <property name="paramName" value="language"/>
        </bean>

        <bean id="browserDetectionInterceptor"
              class="wisematches.server.web.servlet.handler.BrowserDetectionInterceptor">
            <property name="supportedBrowsers">
                <map>
                    <entry key="CHROME" value="12"/>
                    <entry key="OPERA" value="11"/>
                    <entry key="FIREFOX" value="4"/>
                    <entry key="SAFARI" value="5"/>
                </map>
            </property>
        </bean>
    </mvc:interceptors>

    <bean id="commonFreemarkerConfigurer"
          class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value=""/>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="freemarkerVariables">
            <map>
                <entry key="gameMessageSource" value-ref="gameMessageSource"/>
                <entry key="personalityManager" value-ref="personalityManager"/>
                <entry key="playerStateManager" value-ref="playerStateManager"/>
            </map>
        </property>
        <property name="freemarkerSettings">
            <props>
                <prop key="number_format">computer</prop>
                <prop key="object_wrapper">freemarker.ext.beans.BeansWrapper</prop>
                <prop key="template_exception_handler">rethrow</prop>
            </props>
        </property>
    </bean>


    <bean id="springMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="${mail.server.host}"/>
        <property name="port" value="${mail.server.port}"/>
        <property name="username" value="${mail.server.username}"/>
        <property name="password" value="${mail.server.password}"/>

        <property name="javaMailProperties" ref="applicationProperties"/>
    </bean>

    <bean id="notificationTaskExecutor" class="wisematches.core.task.executor.TransactionAwareExecutor">
        <property name="taskExecutor">
            <bean class="org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler">
                <property name="poolSize" value="1"/>
                <property name="threadNamePrefix" value="NotificationManager"/>
                <property name="waitForTasksToCompleteOnShutdown" value="true"/>
            </bean>
        </property>
        <property name="transactionManager" ref="transactionManager"/>
    </bean>

    <bean id="notificationFreemarkerConfig" parent="commonFreemarkerConfigurer">
        <property name="preferFileSystemAccess" value="false"/>
        <property name="templateLoaderPath" value="classpath:/i18n/notify"/>
        <property name="freemarkerVariables">
            <map merge="true">
                <entry key="serverHostName" value="${server.hostname}"/>
            </map>
        </property>
    </bean>

    <bean id="notificationConverter"
          class="wisematches.server.services.notify.impl.converter.FreeMarkerNotificationConverter">
        <property name="messageSource" ref="messageSource"/>
        <property name="freeMarkerConfig">
            <bean factory-bean="notificationFreemarkerConfig" factory-method="createConfiguration"/>
        </property>
    </bean>

    <bean id="mailNotificationPublisher"
          class="wisematches.server.services.notify.impl.publisher.MailNotificationPublisher">
        <property name="hostName" value="${server.hostname}"/>
        <property name="mailSender" ref="springMailSender"/>
        <property name="messageSource" ref="messageSource"/>
    </bean>

    <bean id="messageNotificationPublisher"
          class="wisematches.server.services.notify.impl.publisher.MessageNotificationPublisher">
        <property name="messageManager" ref="messageManager"/>
    </bean>

    <bean id="notificationService" class="wisematches.server.services.notify.impl.PublishNotificationService">
        <property name="taskExecutor" ref="notificationTaskExecutor"/>
        <property name="notificationManager" ref="notificationManager"/>
        <property name="notificationConverter" ref="notificationConverter"/>
        <property name="notificationPublishers">
            <list>
                <ref bean="messageNotificationPublisher"/>

                <bean class="wisematches.server.services.notify.impl.publisher.TimelyNotificationPublisher">
                    <property name="taskExecutor" ref="notificationTaskExecutor"/>
                    <property name="playerStateManager" ref="playerStateManager"/>
                    <property name="notificationPublisher">
                        <bean class="wisematches.server.services.notify.impl.publisher.EssentialNotificationPublisher">
                            <property name="sessionFactory" ref="sessionFactory"/>
                            <property name="playerStateManager" ref="playerStateManager"/>
                            <property name="notificationPublisher" ref="mailNotificationPublisher"/>
                            <property name="redundantNotifications">
                                <set>
                                    <value>playground.game.turn</value>
                                    <value>playground.game.started</value>
                                    <value>playground.message.received</value>
                                    <value>playground.challenge.initiated</value>
                                </set>
                            </property>
                        </bean>
                    </property>

                    <property name="mandatoryNotifications">
                        <set>
                            <value>account.created</value>
                            <value>account.updated</value>
                            <value>account.recovery</value>
                            <value>playground.game.finished</value>
                            <value>playground.game.expiration.hour</value>
                        </set>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

    <bean id="alertsOriginCenter" class="wisematches.server.services.notify.impl.AlertsOriginCenter">
        <property name="hostName" value="${server.hostname}"/>
        <property name="mailSender" ref="springMailSender"/>

        <property name="accountManager" ref="accountManager"/>
        <property name="abuseReportManager" ref="abuseReportManager"/>
        <property name="dictionarySuggestionManager" ref="dictionaryChangeManager"/>
    </bean>

    <bean id="notificationOriginCenter"
          class="wisematches.server.services.notify.impl.NotificationOriginCenter">
        <property name="personalityManager" ref="personalityManager"/>
        <property name="awardsManager" ref="awardsManager"/>
        <property name="messageManager" ref="messageManager"/>
        <property name="gamePlayManager" ref="scribbleBoardManager"/>
        <property name="taskExecutor" ref="notificationTaskExecutor"/>
        <property name="tourneyManager" ref="regularTourneyManager"/>
        <property name="proposalManager" ref="scribbleProposalManager"/>
        <property name="notificationService" ref="notificationService"/>
        <property name="propertiesManager" ref="reliablePropertiesManager"/>
        <property name="dictionarySuggestionManager" ref="dictionaryChangeManager"/>
        <property name="scribbleExpirationManager" ref="scribbleGameExpirationManager"/>
        <property name="proposalExpirationManager" ref="scribbleProposalExpirationManager"/>
    </bean>

    <bean name="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="fallbackToSystemLocale" value="false"/>
        <property name="useCodeAsDefaultMessage" value="true"/>

        <property name="basenames">
            <array>
                <value>classpath:/i18n/web</value>
                <value>classpath:/i18n/tips</value>
                <value>classpath:/i18n/notify</value>
                <value>classpath:/i18n/exceptions</value>
            </array>
        </property>
    </bean>

    <bean id="captchaService" class="wisematches.server.web.security.captcha.captchas.CaptchasCaptchaService">
        <property name="publicKey" value="${captchasNet.publickey}"/>
        <property name="privateKey" value="${captchasNet.privatekey}"/>
        <property name="lettersCount" value="4"/>
        <property name="alphabet" value="0123456789"/>
        <property name="width" value="180"/>
        <property name="height" value="80"/>
    </bean>

    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="messageInterpolator">
            <bean class="wisematches.server.web.validation.SpringMessageInterpolator">
                <property name="messageSource" ref="messageSource"/>
            </bean>
        </property>
    </bean>

    <bean id="localeResolver" class="wisematches.server.web.i18n.PersonalityLocaleResolver"/>

    <bean id="requestHandlerAdapter" class="org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter"/>

    <bean id="freemarkerConfig" parent="commonFreemarkerConfigurer">
        <property name="templateLoaderPath" value=""/>
        <property name="freemarkerVariables">
            <map merge="true">
                <entry key="addThisCode" value="${sociality.addThisCode}"/>
                <entry key="staticDomain" value="${server.static.domain}"/>
                <entry key="analyticsCode" value="${analytics.trackcode}"/>
                <entry key="captchaService" value-ref="captchaService"/>
                <entry key="advertisementManager" value-ref="advertisementManager"/>
            </map>
        </property>
    </bean>

    <bean id="viewResolver" class="wisematches.server.web.servlet.view.WMFreeMarkerViewResolver">
        <property name="cache" value="true"/>
        <property name="prefix" value=""/>
        <property name="suffix" value=".ftl"/>
        <property name="exposeSpringMacroHelpers" value="true"/>
        <property name="exposeRedirectModelAttributes" value="false"/>
        <property name="contentType" value="text/html;charset=UTF-8"/>
        <property name="exposeEnums">
            <list>
                <value>wisematches.core.Language</value>
                <value>wisematches.core.PlayerType</value>
                <value>wisematches.server.services.award.AwardType</value>
            </list>
        </property>
        <property name="viewClass" value="wisematches.server.web.servlet.view.WMFreeMarkerView"/>
    </bean>

    <bean id="gameMessageSource" class="wisematches.server.web.i18n.GameMessageSource">
        <property name="messageSource" ref="messageSource"/>
    </bean>

    <bean id="scribbleObjectsConverter"
          class="wisematches.server.web.servlet.mvc.playground.scribble.board.ScribbleObjectsConverter">
        <property name="gameMessageSource" ref="gameMessageSource"/>
    </bean>


    <bean id="annotationMethodHandlerExceptionResolver"
          class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver">
    </bean>

    <bean id="responseStatusExceptionResolver"
          class="org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver">
    </bean>

    <bean id="defaultHandlerExceptionResolver"
          class="org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver">
    </bean>

</beans>